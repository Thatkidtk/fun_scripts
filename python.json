{
	"Print to console": {
		"prefix": "log",
		"body": [
			"console.log('$1');",
			"$2"
		],
		"description": "Log output to console"
	},
	"Create a for loop": {
		"prefix": "for",
		"body": [
			"for ${1:i} in range(${2:0}, ${3:10}):",
			"  $0"
		],
		"description": "Create a for loop"
	},
	"Create an if statement": {
		"prefix": "if",
		"body": [
			"if $1:",
			"  $0"
		],
		"description": "Create an if statement"
	},
	"Create an if/else statement": {
		"prefix": "ife",
		"body": [
			"if $1:",
			"  $2",
			"else:",
			"  $0"
		],
		"description": "Create an if/else statement"
	},
	"Create a while loop": {
		"prefix": "while",
		"body": [
			"while $1:",
			"  $0"
		],
		"description": "Create a while loop"
	},
	"Create a function": {
		"prefix": "def",
		"body": [
			"def ${1:function_name}($2):",
			"  \"\"\"${3:docstring}\"\"\"",
			"  $0"
		],
		"description": "Create a function"
	},
	"Create a class": {
		"prefix": "class",
		"body": [
			"class ${1:ClassName}(${2:object}):",
			"  \"\"\"${3:docstring}\"\"\"",
			"  def __init__(self, $4):",
			"    $0"
		],
		"description": "Create a class"
	},
	"Create a list": {
		"prefix": "list",
		"body": [
			"${1:my_list} = [$0]"
		],
		"description": "Create a list"
	},
	"Create a dictionary": {
		"prefix": "dict",
		"body": [
			"${1:my_dict} = {$0}"
		],
		"description": "Create a dictionary"
	},
	"Open a file": {
		"prefix": "withopen",
		"body": [
			"with open('${1:filename}', '${2:mode}') as ${3:f}:",
			"  $0"
		],
		"description": "Open a file"
	},
	"Read a file": {
		"prefix": "readfile",
		"body": [
			"with open('${1:filename}', 'r') as ${2:f}:",
			"  ${3:contents} = ${2:f}.read()",
			"  $0"
		],
		"description": "Read a file"
	},
	"Write to a file": {
		"prefix": "writefile",
		"body": [
			"with open('${1:filename}', 'w') as ${2:f}:",
			"  ${2:f}.write('$3')",
			"  $0"
		],
		"description": "Write to a file"
	},
	"Append to a file": {
		"prefix": "appendfile",
		"body": [
			"with open('${1:filename}', 'a') as ${2:f}:",
			"  ${2:f}.write('$3')",
			"  $0"
		],
		"description": "Append to a file"
	},
	"Import a module": {
		"prefix": "import",
		"body": [
			"import $0"
		],
		"description": "Import a module"
	},
	"Import a module with alias": {
		"prefix": "importas",
		"body": [
			"import ${1:module} as ${2:alias}$0"
		],
		"description": "Import a module with alias"
	},
	"Try/Except block": {
		"prefix": "try",
		"body": [
			"try:",
			"  $1",
			"except ${2:Exception} as ${3:e}:",
			"  $0"
		],
		"description": "Try/Except block"
	},
	"Define a lambda function": {
		"prefix": "lambda",
		"body": [
			"${1:my_lambda} = lambda ${2:x}: ${3:x} $0"
		],
		"description": "Define a lambda function"
	},
	"Create a list comprehension": {
		"prefix": "listcomp",
		"body": [
			"[${1:expression} for ${2:item} in ${3:iterable} $0]"
		],
		"description": "Create a list comprehension"
	},
	"Create a dictionary comprehension": {
		"prefix": "dictcomp",
		"body": [
			"{${1:key}: ${2:value} for ${3:item} in ${4:iterable} $0}"
		],
		"description": "Create a dictionary comprehension"
	}
}
